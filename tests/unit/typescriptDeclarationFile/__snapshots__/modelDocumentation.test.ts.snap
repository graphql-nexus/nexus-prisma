// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When a model field has a documentation comment, then it is used for the JSDoc of that field and its $description field: index.d.ts 1`] = `
"import * as Nexus from 'nexus'
import * as NexusCore from 'nexus/dist/core'

//
//
// TYPES
// TYPES
// TYPES
// TYPES
//
//

declare namespace $Types {
  // Models

  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
    *
    * ### ️⚠️ You have not writen documentation for model SomeModel
    * 
    * Replace this default advisory JSDoc with your own documentation about model SomeModel
    * by documenting it in your Prisma schema. For example:
    *
    * 
    * \`\`\`prisma
    * /// Lorem ipsum dolor sit amet...
    * model SomeModel {
    *   foo  String
    * }
    * \`\`\`
    * 
    * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { SomeModel } from 'nexus-prisma'
    *
    * objectType({
    *   name: SomeModel.$name
    *   description: SomeModel.$description
    *   definition(t) {
    *     t.field(SomeModel.id)
    *   }
    * }) 
    */
  interface SomeModel {
    $name: 'SomeModel'
    $description: undefined
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`SomeModel.id\`.
      *
      * Some documentation
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { SomeModel } from 'nexus-prisma'
      *
      * objectType({
      *   name: SomeModel.$name
      *   description: SomeModel.$description
      *   definition(t) {
      *     t.field(SomeModel.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'ID'>
    
      /**
       * The documentation of this field.
       */
      description: string
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'SomeModel', 'id'>
    }
  }

  // Enums

  // N/A –– You have not defined any models in your Prisma schema file.
}


//
//
// EXPORTS
// EXPORTS
// EXPORTS
// EXPORTS
//
//

//
//
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
//
//

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
  *
  * ### ️⚠️ You have not writen documentation for model SomeModel
  * 
  * Replace this default advisory JSDoc with your own documentation about model SomeModel
  * by documenting it in your Prisma schema. For example:
  *
  * 
  * \`\`\`prisma
  * /// Lorem ipsum dolor sit amet...
  * model SomeModel {
  *   foo  String
  * }
  * \`\`\`
  * 
  * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { SomeModel } from 'nexus-prisma'
  *
  * objectType({
  *   name: SomeModel.$name
  *   description: SomeModel.$description
  *   definition(t) {
  *     t.field(SomeModel.id)
  *   }
  * }) 
  */
export const SomeModel: $Types.SomeModel

//
//
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
//
//

// N/A –– You have not defined any models in your Prisma schema file.

//
//
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
//
//

import { Runtime } from '../generator/runtime/settingsSingleton'

/**
 * Adjust Nexus Prisma's [runtime settings](https://pris.ly/nexus-prisma/docs/settings/runtime).
 * 
 *
 * @example
 *
 *     import { PrismaClient } from '@prisma/client'
 *     import { ApolloServer } from 'apollo-server'
 *     import { makeSchema } from 'nexus'
 *     import { User, Post, $settings } from 'nexus-prisma'
 *
 *     new ApolloServer({
 *       schema: makeSchema({
 *         types: [],
 *       }),
 *       context() {
 *         return {
 *           db: new PrismaClient(), // <-- You put Prisma client on the \\"db\\" context property
 *         }
 *       },
 *     })
 *
 *     $settings({
 *       prismaClientContextField: 'db', // <-- Tell Nexus Prisma
 *     })
 *
 * @remarks This is _different_ than Nexus Prisma's [_gentime_
 *          settings](https://pris.ly/nexus-prisma/docs/settings/gentime).
 */
export const $settings: typeof Runtime.changeSettings
"
`;

exports[`When a model field has no documentation comment, then it gets the default JSDoc and its description field is null: index.d.ts 1`] = `
"import * as Nexus from 'nexus'
import * as NexusCore from 'nexus/dist/core'

//
//
// TYPES
// TYPES
// TYPES
// TYPES
//
//

declare namespace $Types {
  // Models

  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
    *
    * ### ️⚠️ You have not writen documentation for model SomeModel
    * 
    * Replace this default advisory JSDoc with your own documentation about model SomeModel
    * by documenting it in your Prisma schema. For example:
    *
    * 
    * \`\`\`prisma
    * /// Lorem ipsum dolor sit amet...
    * model SomeModel {
    *   foo  String
    * }
    * \`\`\`
    * 
    * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { SomeModel } from 'nexus-prisma'
    *
    * objectType({
    *   name: SomeModel.$name
    *   description: SomeModel.$description
    *   definition(t) {
    *     t.field(SomeModel.id)
    *   }
    * }) 
    */
  interface SomeModel {
    $name: 'SomeModel'
    $description: undefined
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`SomeModel.id\`.
      *
      * ### ️⚠️ You have not writen documentation for model SomeModel
      * 
      * Replace this default advisory JSDoc with your own documentation about model SomeModel
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model SomeModel {
      *   /// Lorem ipsum dolor sit amet.
      *   id  String
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { SomeModel } from 'nexus-prisma'
      *
      * objectType({
      *   name: SomeModel.$name
      *   description: SomeModel.$description
      *   definition(t) {
      *     t.field(SomeModel.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'ID'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'SomeModel', 'id'>
    }
  }

  // Enums

  // N/A –– You have not defined any models in your Prisma schema file.
}


//
//
// EXPORTS
// EXPORTS
// EXPORTS
// EXPORTS
//
//

//
//
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
//
//

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
  *
  * ### ️⚠️ You have not writen documentation for model SomeModel
  * 
  * Replace this default advisory JSDoc with your own documentation about model SomeModel
  * by documenting it in your Prisma schema. For example:
  *
  * 
  * \`\`\`prisma
  * /// Lorem ipsum dolor sit amet...
  * model SomeModel {
  *   foo  String
  * }
  * \`\`\`
  * 
  * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { SomeModel } from 'nexus-prisma'
  *
  * objectType({
  *   name: SomeModel.$name
  *   description: SomeModel.$description
  *   definition(t) {
  *     t.field(SomeModel.id)
  *   }
  * }) 
  */
export const SomeModel: $Types.SomeModel

//
//
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
//
//

// N/A –– You have not defined any models in your Prisma schema file.

//
//
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
//
//

import { Runtime } from '../generator/runtime/settingsSingleton'

/**
 * Adjust Nexus Prisma's [runtime settings](https://pris.ly/nexus-prisma/docs/settings/runtime).
 * 
 *
 * @example
 *
 *     import { PrismaClient } from '@prisma/client'
 *     import { ApolloServer } from 'apollo-server'
 *     import { makeSchema } from 'nexus'
 *     import { User, Post, $settings } from 'nexus-prisma'
 *
 *     new ApolloServer({
 *       schema: makeSchema({
 *         types: [],
 *       }),
 *       context() {
 *         return {
 *           db: new PrismaClient(), // <-- You put Prisma client on the \\"db\\" context property
 *         }
 *       },
 *     })
 *
 *     $settings({
 *       prismaClientContextField: 'db', // <-- Tell Nexus Prisma
 *     })
 *
 * @remarks This is _different_ than Nexus Prisma's [_gentime_
 *          settings](https://pris.ly/nexus-prisma/docs/settings/gentime).
 */
export const $settings: typeof Runtime.changeSettings
"
`;

exports[`When a model has a documentation comment, then it is used for the JSDoc of that model and its $description field: index.d.ts 1`] = `
"import * as Nexus from 'nexus'
import * as NexusCore from 'nexus/dist/core'

//
//
// TYPES
// TYPES
// TYPES
// TYPES
//
//

declare namespace $Types {
  // Models

  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
    *
    * Some documentation
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { SomeModel } from 'nexus-prisma'
    *
    * objectType({
    *   name: SomeModel.$name
    *   description: SomeModel.$description
    *   definition(t) {
    *     t.field(SomeModel.id)
    *   }
    * }) 
    */
  interface SomeModel {
    $name: 'SomeModel'
    $description: 'Some documentation'
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`SomeModel.id\`.
      *
      * ### ️⚠️ You have not writen documentation for model SomeModel
      * 
      * Replace this default advisory JSDoc with your own documentation about model SomeModel
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model SomeModel {
      *   /// Lorem ipsum dolor sit amet.
      *   id  String
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { SomeModel } from 'nexus-prisma'
      *
      * objectType({
      *   name: SomeModel.$name
      *   description: SomeModel.$description
      *   definition(t) {
      *     t.field(SomeModel.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'ID'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'SomeModel', 'id'>
    }
  }

  // Enums

  // N/A –– You have not defined any models in your Prisma schema file.
}


//
//
// EXPORTS
// EXPORTS
// EXPORTS
// EXPORTS
//
//

//
//
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
//
//

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
  *
  * Some documentation
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { SomeModel } from 'nexus-prisma'
  *
  * objectType({
  *   name: SomeModel.$name
  *   description: SomeModel.$description
  *   definition(t) {
  *     t.field(SomeModel.id)
  *   }
  * }) 
  */
export const SomeModel: $Types.SomeModel

//
//
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
//
//

// N/A –– You have not defined any models in your Prisma schema file.

//
//
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
//
//

import { Runtime } from '../generator/runtime/settingsSingleton'

/**
 * Adjust Nexus Prisma's [runtime settings](https://pris.ly/nexus-prisma/docs/settings/runtime).
 * 
 *
 * @example
 *
 *     import { PrismaClient } from '@prisma/client'
 *     import { ApolloServer } from 'apollo-server'
 *     import { makeSchema } from 'nexus'
 *     import { User, Post, $settings } from 'nexus-prisma'
 *
 *     new ApolloServer({
 *       schema: makeSchema({
 *         types: [],
 *       }),
 *       context() {
 *         return {
 *           db: new PrismaClient(), // <-- You put Prisma client on the \\"db\\" context property
 *         }
 *       },
 *     })
 *
 *     $settings({
 *       prismaClientContextField: 'db', // <-- Tell Nexus Prisma
 *     })
 *
 * @remarks This is _different_ than Nexus Prisma's [_gentime_
 *          settings](https://pris.ly/nexus-prisma/docs/settings/gentime).
 */
export const $settings: typeof Runtime.changeSettings
"
`;

exports[`When a model has no documentation comment, then it gets the default JSDoc and its description field is null: index.d.ts 1`] = `
"import * as Nexus from 'nexus'
import * as NexusCore from 'nexus/dist/core'

//
//
// TYPES
// TYPES
// TYPES
// TYPES
//
//

declare namespace $Types {
  // Models

  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
    *
    * ### ️⚠️ You have not writen documentation for model SomeModel
    * 
    * Replace this default advisory JSDoc with your own documentation about model SomeModel
    * by documenting it in your Prisma schema. For example:
    *
    * 
    * \`\`\`prisma
    * /// Lorem ipsum dolor sit amet...
    * model SomeModel {
    *   foo  String
    * }
    * \`\`\`
    * 
    * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { SomeModel } from 'nexus-prisma'
    *
    * objectType({
    *   name: SomeModel.$name
    *   description: SomeModel.$description
    *   definition(t) {
    *     t.field(SomeModel.id)
    *   }
    * }) 
    */
  interface SomeModel {
    $name: 'SomeModel'
    $description: undefined
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`SomeModel.id\`.
      *
      * ### ️⚠️ You have not writen documentation for model SomeModel
      * 
      * Replace this default advisory JSDoc with your own documentation about model SomeModel
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model SomeModel {
      *   /// Lorem ipsum dolor sit amet.
      *   id  String
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { SomeModel } from 'nexus-prisma'
      *
      * objectType({
      *   name: SomeModel.$name
      *   description: SomeModel.$description
      *   definition(t) {
      *     t.field(SomeModel.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'ID'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'SomeModel', 'id'>
    }
  }

  // Enums

  // N/A –– You have not defined any models in your Prisma schema file.
}


//
//
// EXPORTS
// EXPORTS
// EXPORTS
// EXPORTS
//
//

//
//
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
//
//

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`SomeModel\`.
  *
  * ### ️⚠️ You have not writen documentation for model SomeModel
  * 
  * Replace this default advisory JSDoc with your own documentation about model SomeModel
  * by documenting it in your Prisma schema. For example:
  *
  * 
  * \`\`\`prisma
  * /// Lorem ipsum dolor sit amet...
  * model SomeModel {
  *   foo  String
  * }
  * \`\`\`
  * 
  * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { SomeModel } from 'nexus-prisma'
  *
  * objectType({
  *   name: SomeModel.$name
  *   description: SomeModel.$description
  *   definition(t) {
  *     t.field(SomeModel.id)
  *   }
  * }) 
  */
export const SomeModel: $Types.SomeModel

//
//
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
//
//

// N/A –– You have not defined any models in your Prisma schema file.

//
//
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
//
//

import { Runtime } from '../generator/runtime/settingsSingleton'

/**
 * Adjust Nexus Prisma's [runtime settings](https://pris.ly/nexus-prisma/docs/settings/runtime).
 * 
 *
 * @example
 *
 *     import { PrismaClient } from '@prisma/client'
 *     import { ApolloServer } from 'apollo-server'
 *     import { makeSchema } from 'nexus'
 *     import { User, Post, $settings } from 'nexus-prisma'
 *
 *     new ApolloServer({
 *       schema: makeSchema({
 *         types: [],
 *       }),
 *       context() {
 *         return {
 *           db: new PrismaClient(), // <-- You put Prisma client on the \\"db\\" context property
 *         }
 *       },
 *     })
 *
 *     $settings({
 *       prismaClientContextField: 'db', // <-- Tell Nexus Prisma
 *     })
 *
 * @remarks This is _different_ than Nexus Prisma's [_gentime_
 *          settings](https://pris.ly/nexus-prisma/docs/settings/gentime).
 */
export const $settings: typeof Runtime.changeSettings
"
`;
