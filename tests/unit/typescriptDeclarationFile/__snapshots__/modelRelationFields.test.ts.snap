// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A model relation field projects a default resolve function: index.d.ts 1`] = `
"import * as Nexus from 'nexus'
import * as NexusCore from 'nexus/dist/core'

//
//
// TYPES
// TYPES
// TYPES
// TYPES
//
//

declare namespace $Types {
  // Models

  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`User\`.
    *
    * ### ️⚠️ You have not writen documentation for model User
    * 
    * Replace this default advisory JSDoc with your own documentation about model User
    * by documenting it in your Prisma schema. For example:
    *
    * 
    * \`\`\`prisma
    * /// Lorem ipsum dolor sit amet...
    * model User {
    *   foo  String
    * }
    * \`\`\`
    * 
    * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { User } from 'nexus-prisma'
    *
    * objectType({
    *   name: User.$name
    *   description: User.$description
    *   definition(t) {
    *     t.field(User.id.name, User.id)
    *   }
    * }) 
    */
  interface User {
    $name: 'User'
    $description: undefined
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`User.id\`.
      *
      * ### ️⚠️ You have not writen documentation for model User
      * 
      * Replace this default advisory JSDoc with your own documentation about model User
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model User {
      *   /// Lorem ipsum dolor sit amet.
      *   id  Int
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { User } from 'nexus-prisma'
      *
      * objectType({
      *   name: User.$name
      *   description: User.$description
      *   definition(t) {
      *     t.field(User.id.name, User.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'Int'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'User', 'id'>
    }
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`User.posts\`.
      *
      * ### ️⚠️ You have not writen documentation for model User
      * 
      * Replace this default advisory JSDoc with your own documentation about model User
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model User {
      *   /// Lorem ipsum dolor sit amet.
      *   posts  Post
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { User } from 'nexus-prisma'
      *
      * objectType({
      *   name: User.$name
      *   description: User.$description
      *   definition(t) {
      *     t.field(User.posts.name, User.posts)
      *   }
      * }) 
      */
    posts: {
      /**
       * The name of this field.
       */
      name: 'posts'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusListDef<Post> | NexusCore.NexusNonNullDef<Post>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'User', 'posts'>
    }
  }
  
  /**
    * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`Post\`.
    *
    * ### ️⚠️ You have not writen documentation for model Post
    * 
    * Replace this default advisory JSDoc with your own documentation about model Post
    * by documenting it in your Prisma schema. For example:
    *
    * 
    * \`\`\`prisma
    * /// Lorem ipsum dolor sit amet...
    * model Post {
    *   foo  String
    * }
    * \`\`\`
    * 
    * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
    *
    * @example
    *
    * import { objectType } from 'nexus'
    * import { Post } from 'nexus-prisma'
    *
    * objectType({
    *   name: Post.$name
    *   description: Post.$description
    *   definition(t) {
    *     t.field(Post.id.name, Post.id)
    *   }
    * }) 
    */
  interface Post {
    $name: 'Post'
    $description: undefined
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`Post.id\`.
      *
      * ### ️⚠️ You have not writen documentation for model Post
      * 
      * Replace this default advisory JSDoc with your own documentation about model Post
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model Post {
      *   /// Lorem ipsum dolor sit amet.
      *   id  Int
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { Post } from 'nexus-prisma'
      *
      * objectType({
      *   name: Post.$name
      *   description: Post.$description
      *   definition(t) {
      *     t.field(Post.id.name, Post.id)
      *   }
      * }) 
      */
    id: {
      /**
       * The name of this field.
       */
      name: 'id'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNonNullDef<'Int'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'Post', 'id'>
    }
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`Post.author\`.
      *
      * ### ️⚠️ You have not writen documentation for model Post
      * 
      * Replace this default advisory JSDoc with your own documentation about model Post
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model Post {
      *   /// Lorem ipsum dolor sit amet.
      *   author  User?
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { Post } from 'nexus-prisma'
      *
      * objectType({
      *   name: Post.$name
      *   description: Post.$description
      *   definition(t) {
      *     t.field(Post.author.name, Post.author)
      *   }
      * }) 
      */
    author: {
      /**
       * The name of this field.
       */
      name: 'author'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNullDef<'User'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'Post', 'author'>
    }
    /**
     * Generated Nexus \`t.field\` configuration based on your Prisma schema's model-field \`Post.authorId\`.
      *
      * ### ️⚠️ You have not writen documentation for model Post
      * 
      * Replace this default advisory JSDoc with your own documentation about model Post
      * by documenting it in your Prisma schema. For example:
      *
      * \`\`\`prisma
      * model Post {
      *   /// Lorem ipsum dolor sit amet.
      *   authorId  Int?
      * }
      * \`\`\`
      *
      * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
      *
      * @example
      *
      * import { objectType } from 'nexus'
      * import { Post } from 'nexus-prisma'
      *
      * objectType({
      *   name: Post.$name
      *   description: Post.$description
      *   definition(t) {
      *     t.field(Post.authorId.name, Post.authorId)
      *   }
      * }) 
      */
    authorId: {
      /**
       * The name of this field.
       */
      name: 'authorId'
    
      /**
       * The type of this field.
       */
      type: NexusCore.NexusNullDef<'Int'>
    
      /**
       * The documentation of this field.
       */
      description: undefined
    
      /**
       * The resolver of this field
       */
      resolve: NexusCore.FieldResolver<'Post', 'authorId'>
    }
  }

  // Enums

  // N/A –– You have not defined any models in your Prisma schema file.
}


//
//
// EXPORTS
// EXPORTS
// EXPORTS
// EXPORTS
//
//

//
//
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
// EXPORTS: PRISMA MODELS
//
//

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`User\`.
  *
  * ### ️⚠️ You have not writen documentation for model User
  * 
  * Replace this default advisory JSDoc with your own documentation about model User
  * by documenting it in your Prisma schema. For example:
  *
  * 
  * \`\`\`prisma
  * /// Lorem ipsum dolor sit amet...
  * model User {
  *   foo  String
  * }
  * \`\`\`
  * 
  * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { User } from 'nexus-prisma'
  *
  * objectType({
  *   name: User.$name
  *   description: User.$description
  *   definition(t) {
  *     t.field(User.id.name, User.id)
  *   }
  * }) 
  */
export const User: $Types.User

/**
  * Generated Nexus \`objectType\` configuration based on your Prisma schema's model \`Post\`.
  *
  * ### ️⚠️ You have not writen documentation for model Post
  * 
  * Replace this default advisory JSDoc with your own documentation about model Post
  * by documenting it in your Prisma schema. For example:
  *
  * 
  * \`\`\`prisma
  * /// Lorem ipsum dolor sit amet...
  * model Post {
  *   foo  String
  * }
  * \`\`\`
  * 
  * Learn more about documentation comments in Prisma schema files [here](https://www.prisma.io/docs/concepts/components/prisma-schema#comments).
  *
  * @example
  *
  * import { objectType } from 'nexus'
  * import { Post } from 'nexus-prisma'
  *
  * objectType({
  *   name: Post.$name
  *   description: Post.$description
  *   definition(t) {
  *     t.field(Post.id.name, Post.id)
  *   }
  * }) 
  */
export const Post: $Types.Post

//
//
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
// EXPORTS: PRISMA ENUMS
//
//

// N/A –– You have not defined any models in your Prisma schema file.

//
//
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
// EXPORTS: OTHER
//
//

import { Runtime } from '../generator/runtime/settingsSingleton'

/**
 * Adjust Nexus Prisma's [runtime settings](https://pris.ly/nexus-prisma/docs/settings/runtime).
 * 
 *
 * @example
 *
 *     import { PrismaClient } from '@prisma/client'
 *     import { ApolloServer } from 'apollo-server'
 *     import { makeSchema } from 'nexus'
 *     import { User, Post, $settings } from 'nexus-prisma'
 *
 *     new ApolloServer({
 *       schema: makeSchema({
 *         types: [],
 *       }),
 *       context() {
 *         return {
 *           db: new PrismaClient(), // <-- You put Prisma client on the \\"db\\" context property
 *         }
 *       },
 *     })
 *
 *     $settings({
 *       prismaClientContextField: 'db', // <-- Tell Nexus Prisma
 *     })
 *
 * @remarks This is _different_ than Nexus Prisma's [_gentime_
 *          settings](https://pris.ly/nexus-prisma/docs/settings/gentime).
 */
export const $settings: typeof Runtime.changeSettings
"
`;
